stages:          # List of stages for jobs, and their order of execution
  - build-cloud
  - build-edge
  - run-load
  - collect-data
  - cleanup

cloud-minikube-setup:
  stage: build-cloud
  script: 
    - cd $CI_PROJECT_DIR/helpers/scripts && ./minikube_setup.sh
  tags:
    - "cloud-runner"
  when: manual

cloud-helm-deploy:
  stage: build-cloud
  needs: 
    - cloud-minikube-setup
  script:
    - cd $CI_PROJECT_DIR/helpers/scripts && ./deploy_chart.sh
  tags:
    - "cloud-runner"

cloud-seed:
  stage: build-cloud
  needs: 
    - cloud-helm-deploy
  script:
    - cd $CI_PROJECT_DIR/helpers/scripts && ./seed.sh
  tags:
    - "cloud-runner"

cloud-deploy-kps:
  stage: build-cloud
  needs: 
    - cloud-minikube-setup
  script:
    - cd $CI_PROJECT_DIR/helpers/scripts && ./deploy_kps.sh
  tags:
    - "cloud-runner"

edge-minikube-setup:
  stage: build-edge
  script:
    - cd $CI_PROJECT_DIR/helpers/scripts && ./minikube_setup.sh
  tags:
    - "edge-runner"
  when: manual

edge-helm-deploy:
  stage: build-edge
  needs: [edge-minikube-setup]
  script:
#TODO: deploy_chart.sh shoud take argument
#    - cd $CI_PROJECT_DIR/helpers/scripts && ./deploy_chart.sh
    - cd $CI_PROJECT_DIR && helm install vp-edge vp-cloud -f variants/default/values.edge-particles.yaml --disable-openapi-validation
    - kubectl wait --for=condition=ready pod -l app=videoserver-videomanagement --timeout=10m
    - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts && helm repo update
    - kubectl create ns monitoring
    - helm install kps-edge prometheus-community/kube-prometheus-stack -n monitoring --set grafana.service.type=NodePort
    - kubectl patch service kps-edge-grafana -n monitoring --type='json' --patch='[{"op":"replace", "path":"/spec/ports/0/nodePort","value":30002}]'
  tags:
    - "edge-runner"

cleanup-edge:
  stage: cleanup
  script:
    - minikube delete 
  tags:
    - "edge-runner"
  when: manual

cleanup-cloud:
  stage: cleanup
  script:
    - minikube delete 
  tags:
    - "cloud-runner"
  when: manual

start-load: 
    stage: run-load
    script: 
      - echo "starting load"
    #needs: [deploy-edge-job]
    when: manual #TODO remove me
    tags: 
      - "load-runner" #do not exist yes

collect-data-job:
  stage: collect-data
  script:
    - cd $CI_PROJECT_DIR/helpers/scripts && ./collect_metrics.sh
  tags: 
    - "cloud-runner"
  artifacts:
    untracked: true
    paths:
      - $CI_PROJECT_DIR/helpers/prom-data/
  when: manual
