{{- if or (eq .Values.vms.isCloud "true") (not (eq .Values.vms.variantType "0")) }}
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  name: kafkaa
  labels:
    app: kafkaa
spec:
  ports:
  - port: 9092
    name: plaintext
  - port: 9999
    name: jmx
  selector:
    app: kafkaa
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  labels:
    app: zookeeper-service
  name: zookeeper-service
spec:
  type: ClusterIP
  ports:
  - name: zookeeper-port
    port: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Values.namespace }}
  name: kafkaa
spec:
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: kafkaa
  serviceName: "kafkaa"
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: kafkaa
    spec:
      containers:
      - name: kafkaa
        image: {{.Values.images.kafka}}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: plaintext
        - containerPort: 9999
          name: jmx
        env:
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: BROKER_ID_COMMAND
            value: "hostname | cut -d'-' -f2"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper-service:2181"
          - name: KAFKA_LISTENERS
            value: "PLAINTEXT://:9092"
          - name: KAFKA_JMX_OPTS
            value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999 -Djava.rmi.server.hostname=127.0.0.1"
          - name: JMX_PORT
            value: "9999"
        resources:
          {{- toYaml .Values.resources.kafka| nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  labels:
    app: zookeeper
  name: zookeeper
spec:
  replicas: {{ .Values.zookeeper.replicas }}
  selector:
      matchLabels:
          app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - image: {{.Values.images.zookeeper}}
        imagePullPolicy: IfNotPresent
        name: zookeeper
        ports:
        - containerPort: 2181
        env:
        - name: ZOO_MY_ID
          value: "1"
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
        resources:
          {{- toYaml .Values.resources.zookeeper| nindent 10 }}
{{- end }}
